---
- name: Post Build Configuration for Windows Servers
  hosts: windows
  gather_facts: false
  tasks:
    - name: Define variable
      debug:
        msg: "{{ hostname | lower  }}"
    - name: Create IT Scripts directory
      win_file:
        path: c:\IT\Scripts
        state: directory
    - name: Disable inherited ACE's for c:\IT folder
      win_acl_inheritance:
        path: C:\IT
        state: absent
    - name: Add Administrators Group allow rights
      win_acl:
        path: C:\IT
        user: Administrators
        rights: FullControl
        type: allow
        state: present
        inherit: ContainerInherit, ObjectInherit
        propagation: 'InheritOnly'
    - name: Add SYSTEM Group allow rights
      win_acl:
        path: C:\IT
        user: SYSTEM
        rights: FullControl
        type: allow
        state: present
        inherit: ContainerInherit, ObjectInherit
        propagation: 'InheritOnly'
    - name: Add Power Users Group allow rights
      win_acl:
        path: C:\IT
        user: 'power users'
        rights: READ
        type: allow
        state: present
        inherit: ContainerInherit, ObjectInherit
        propagation: 'InheritOnly'
    - name: Create temp directory
      win_file:
        path: C:\Temp
        state: directory
    - name: Change CD-Rom Drive letter to Z
      win_shell: |
        $CDDrive = Get-WmiObject win32_volume | where {$_.DriveType -eq 5}
        if ($CDDrive  -ne $null) {
            $CDDrive.DriveLetter = "Z:";
            $CDDrive.put()
        }
    - name: Extend C Drive
      win_shell: |
        $cDriveSupportSize = $(Get-PartitionSupportedSize -DriveLetter "C").sizeMax
        $cDriveSize = $(Get-Partition -DriveLetter "C").size
        try{
            if($cDriveSupportSize -gt $cDriveSize)
            {
                resize-Partition -Size $cDriveSupportSize -DriveLetter "C" -ErrorAction stop
            }
        }
        catch{}
    - name: Remove all current pagefiles, enable AutomaticManagedPagefile and query at the end  
      win_pagefile:
        automatic: yes
    - name: Enable firewall for Domain, Public and Private profiles
      win_firewall:
        state: enabled
    - name: Add a local and domain user to a local group  
      win_group_membership:
        name: Administrators
        members:
          - 'ASTRAZENECA\XAZ-CSIS IAM Hybrid Operation-Server Administrators'
          - 'ASTRAZENECA\XAZ-CSIS Hybrid Operation-Server Administrators'
          - 'ASTRAZENECA\XAZ-Global ECS-Wintel Server Administrators'
          - 'ASTRAZENECA\XAZ-Global Wintel Permission Administrators'
          - 'ASTRAZENECA\XAZ-Global Symantec Server Administrators'
          - 'ASTRAZENECA\XAZ-Global ECS Backup Administrators '
          - 'ASTRAZENECA\XAZ-Global Service Accounts'
        state: present
    - name: Download Diruse
      win_get_url:
        url: " {{ windows_repo.url }}/diruse/{{ item.key }} "
        dest: "C:\\windows\\{{ item.key }}"
        checksum: " {{ item.value }} "
        checksum_algorithm: sha256
        force: True
      with_dict: "{{ windows_diruse.files }}"
    - name: DesktopInfo folder exists
      win_file:
        path: "C:\\Program Files (x86)\\DesktopInfo"
        state: directory
    - name: stop desktopinfo process
      win_shell: |
        if(Get-Process -Name DesktopInfo -ErrorAction SilentlyContinue){ Stop-Process -Force -ErrorAction SilentlyContinue }
    - name: Download DesktopInfo
      win_get_url:
        url: " {{ windows_repo.url }}/DesktopInfo/{{ item.key }} "
        dest: "C:\\Program Files (x86)\\DesktopInfo\\{{ item.key }}"
        checksum: " {{ item.value }} "
        checksum_algorithm: sha256
        force: True
      with_dict: "{{ windows_desktopinfo.files }}"
    - name: Download DesktopInfo.lnk
      win_get_url:
        url: " {{ windows_repo.url }}/DesktopInfo/DesktopInfo.lnk "
        dest: "C:\\ProgramData\\Microsoft\\Windows\\Start Menu\\Programs\\Startup\\DesktopInfo.lnk"
        force: True
